package org.greenlist.entityé;
// Generated 28 avr. 2017 10:03:43 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Preference generated by hbm2java
 */
@Entity
@Table(name="preference"
    ,catalog="projet3"
)
public class Preference  implements java.io.Serializable {


     private int id;
     private FrequenceEmail frequenceEmail;
     private Utilisateur utilisateur;
     private Set typenotifications = new HashSet(0);
     private Set typeEmails = new HashSet(0);
     private Set utilisateurs = new HashSet(0);

    public Preference() {
    }

	
    public Preference(int id, FrequenceEmail frequenceEmail) {
        this.id = id;
        this.frequenceEmail = frequenceEmail;
    }
    public Preference(int id, FrequenceEmail frequenceEmail, Utilisateur utilisateur, Set typenotifications, Set typeEmails, Set utilisateurs) {
       this.id = id;
       this.frequenceEmail = frequenceEmail;
       this.utilisateur = utilisateur;
       this.typenotifications = typenotifications;
       this.typeEmails = typeEmails;
       this.utilisateurs = utilisateurs;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDFREQUENCE", nullable=false)
    public FrequenceEmail getFrequenceEmail() {
        return this.frequenceEmail;
    }
    
    public void setFrequenceEmail(FrequenceEmail frequenceEmail) {
        this.frequenceEmail = frequenceEmail;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDUTILISATEUR")
    public Utilisateur getUtilisateur() {
        return this.utilisateur;
    }
    
    public void setUtilisateur(Utilisateur utilisateur) {
        this.utilisateur = utilisateur;
    }

@ManyToMany(fetch=FetchType.LAZY, mappedBy="preferences")
    public Set getTypenotifications() {
        return this.typenotifications;
    }
    
    public void setTypenotifications(Set typenotifications) {
        this.typenotifications = typenotifications;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="definit_mail", catalog="projet3", joinColumns = { 
        @JoinColumn(name="IDPREFERENCE", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="ID", nullable=false, updatable=false) })
    public Set getTypeEmails() {
        return this.typeEmails;
    }
    
    public void setTypeEmails(Set typeEmails) {
        this.typeEmails = typeEmails;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="preference")
    public Set getUtilisateurs() {
        return this.utilisateurs;
    }
    
    public void setUtilisateurs(Set utilisateurs) {
        this.utilisateurs = utilisateurs;
    }




}


