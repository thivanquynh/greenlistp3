package org.greenlist.entityé;
// Generated 28 avr. 2017 10:03:43 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Objet generated by hbm2java
 */
@Entity
@Table(name="objet"
    ,catalog="projet3"
)
public class Objet  implements java.io.Serializable {


     private int id;
     private Produit produit;
     private TrancheAge trancheAge;
     private Utilisateur utilisateur;
     private String libelle;
     private Date dateDepot;
     private int valeur;
     private String description;
     private Date dateCreation;
     private Date datePublication;
     private Date dateDepublication;
     private Set echanges = new HashSet(0);
     private Set tickets = new HashSet(0);
     private Set messagepublics = new HashSet(0);
     private Set photos = new HashSet(0);
     private Set paniers = new HashSet(0);

    public Objet() {
    }

	
    public Objet(int id, Produit produit, TrancheAge trancheAge, Utilisateur utilisateur, String libelle, Date dateDepot, int valeur, Date dateCreation) {
        this.id = id;
        this.produit = produit;
        this.trancheAge = trancheAge;
        this.utilisateur = utilisateur;
        this.libelle = libelle;
        this.dateDepot = dateDepot;
        this.valeur = valeur;
        this.dateCreation = dateCreation;
    }
    public Objet(int id, Produit produit, TrancheAge trancheAge, Utilisateur utilisateur, String libelle, Date dateDepot, int valeur, String description, Date dateCreation, Date datePublication, Date dateDepublication, Set echanges, Set tickets, Set messagepublics, Set photos, Set paniers) {
       this.id = id;
       this.produit = produit;
       this.trancheAge = trancheAge;
       this.utilisateur = utilisateur;
       this.libelle = libelle;
       this.dateDepot = dateDepot;
       this.valeur = valeur;
       this.description = description;
       this.dateCreation = dateCreation;
       this.datePublication = datePublication;
       this.dateDepublication = dateDepublication;
       this.echanges = echanges;
       this.tickets = tickets;
       this.messagepublics = messagepublics;
       this.photos = photos;
       this.paniers = paniers;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDPRODUIT", nullable=false)
    public Produit getProduit() {
        return this.produit;
    }
    
    public void setProduit(Produit produit) {
        this.produit = produit;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDTRANCHEAGE", nullable=false)
    public TrancheAge getTrancheAge() {
        return this.trancheAge;
    }
    
    public void setTrancheAge(TrancheAge trancheAge) {
        this.trancheAge = trancheAge;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDUTILISATEUR", nullable=false)
    public Utilisateur getUtilisateur() {
        return this.utilisateur;
    }
    
    public void setUtilisateur(Utilisateur utilisateur) {
        this.utilisateur = utilisateur;
    }

    
    @Column(name="LIBELLE", nullable=false, length=50)
    public String getLibelle() {
        return this.libelle;
    }
    
    public void setLibelle(String libelle) {
        this.libelle = libelle;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_DEPOT", nullable=false, length=10)
    public Date getDateDepot() {
        return this.dateDepot;
    }
    
    public void setDateDepot(Date dateDepot) {
        this.dateDepot = dateDepot;
    }

    
    @Column(name="VALEUR", nullable=false)
    public int getValeur() {
        return this.valeur;
    }
    
    public void setValeur(int valeur) {
        this.valeur = valeur;
    }

    
    @Column(name="DESCRIPTION", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_CREATION", nullable=false, length=10)
    public Date getDateCreation() {
        return this.dateCreation;
    }
    
    public void setDateCreation(Date dateCreation) {
        this.dateCreation = dateCreation;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_PUBLICATION", length=10)
    public Date getDatePublication() {
        return this.datePublication;
    }
    
    public void setDatePublication(Date datePublication) {
        this.datePublication = datePublication;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_DEPUBLICATION", length=10)
    public Date getDateDepublication() {
        return this.dateDepublication;
    }
    
    public void setDateDepublication(Date dateDepublication) {
        this.dateDepublication = dateDepublication;
    }

@ManyToMany(fetch=FetchType.LAZY, mappedBy="objets")
    public Set getEchanges() {
        return this.echanges;
    }
    
    public void setEchanges(Set echanges) {
        this.echanges = echanges;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="objet")
    public Set getTickets() {
        return this.tickets;
    }
    
    public void setTickets(Set tickets) {
        this.tickets = tickets;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="objet")
    public Set getMessagepublics() {
        return this.messagepublics;
    }
    
    public void setMessagepublics(Set messagepublics) {
        this.messagepublics = messagepublics;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="objet")
    public Set getPhotos() {
        return this.photos;
    }
    
    public void setPhotos(Set photos) {
        this.photos = photos;
    }

@ManyToMany(fetch=FetchType.LAZY, mappedBy="objets")
    public Set getPaniers() {
        return this.paniers;
    }
    
    public void setPaniers(Set paniers) {
        this.paniers = paniers;
    }




}


