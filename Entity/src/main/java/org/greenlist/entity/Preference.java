package org.greenlist.entity;
// Generated 28 avr. 2017 10:03:43 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Preference generated by hbm2java
 */
@Entity
@Table(name = "preference", catalog = "projet3")
public class Preference implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private int id;
	private FrequenceEmail frequenceEmail;
	private Utilisateur utilisateur;
	private List<Typenotification> typenotifications = new ArrayList<>();
	private List<TypeEmail> typeEmails = new ArrayList<>();
	private List<Utilisateur> utilisateurs = new ArrayList<>();

	public Preference() {
	}

	public Preference(int id, FrequenceEmail frequenceEmail) {
		this.id = id;
		this.frequenceEmail = frequenceEmail;
	}

	public Preference(int id, FrequenceEmail frequenceEmail, Utilisateur utilisateur,
			List<Typenotification> typenotifications, List<TypeEmail> typeEmails, List<Utilisateur> utilisateurs) {
		this.id = id;
		this.frequenceEmail = frequenceEmail;
		this.utilisateur = utilisateur;
		this.typenotifications = typenotifications;
		this.typeEmails = typeEmails;
		this.utilisateurs = utilisateurs;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDFREQUENCE", nullable = true)
	public FrequenceEmail getFrequenceEmail() {
		return this.frequenceEmail;
	}

	public void setFrequenceEmail(FrequenceEmail frequenceEmail) {
		this.frequenceEmail = frequenceEmail;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDUTILISATEUR")
	public Utilisateur getUtilisateur() {
		return this.utilisateur;
	}

	public void setUtilisateur(Utilisateur utilisateur) {
		this.utilisateur = utilisateur;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "preferences")
	public List<Typenotification> getTypenotifications() {
		return this.typenotifications;
	}

	public void setTypenotifications(List<Typenotification> typenotifications) {
		this.typenotifications = typenotifications;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "definit_mail", catalog = "projet3", joinColumns = {
			@JoinColumn(name = "IDPREFERENCE", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ID", nullable = false, updatable = false) })
	public List<TypeEmail> getTypeEmails() {
		return this.typeEmails;
	}

	public void setTypeEmails(List<TypeEmail> typeEmails) {
		this.typeEmails = typeEmails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "preference")
	public List<Utilisateur> getUtilisateurs() {
		return this.utilisateurs;
	}

	public void setUtilisateurs(List<Utilisateur> utilisateurs) {
		this.utilisateurs = utilisateurs;
	}

}
